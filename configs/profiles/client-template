# Client Profile Configuration Template
# Optimized for: Client projects, freelancing, transparent billing
# Philosophy: Client transparency, deliverable tracking, professional presentation

# ============================================================================
# USER IDENTITY - Client-facing credentials
# ============================================================================
[user]
    # Your professional name as it appears on contracts/invoices
    name = {{USER_NAME}}
    # Email address client knows you by (might be different per client)
    email = {{USER_EMAIL}}
    # Optional: Professional GPG key for client trust
    # signingkey = {{GPG_KEY_ID}}

# ============================================================================
# COMMIT SETTINGS - Professional authenticity
# ============================================================================
[commit]
    # Optional: Sign commits for client trust and authenticity
    # Shows professionalism and commitment to security
    # gpgsign = true

# ============================================================================
# CLIENT WORKFLOW ALIASES - Transparency and reporting tools
# ============================================================================
[alias]
    # WEEKLY CLIENT UPDATE: Show recent work for client
    # Usage: git client-log (shows your work from past week)
    # Perfect for: Weekly client calls, progress reports, billing transparency
    client-log = log --author='{{USER_EMAIL}}' --since='1 week ago' --oneline
    
    # DELIVERABLE REPORT: Professional format for client presentations
    # Usage: git deliverable (creates nice report of recent work)
    # Perfect for: Invoices, milestone reports, client presentations
    # Format shows: commit hash, description, author, time ago
    deliverable = log --since='2 weeks ago' --pretty=format:'%h - %s (%an, %ar)'

# ============================================================================
# VERSION MANAGEMENT - Client release tracking
# ============================================================================
[tag]
    # Sort tags by version number for clear client communication
    # Essential for: Client releases, billing milestones, feature delivery
    sort = version:refname

# ============================================================================
# BRANCH BEHAVIOR - Audit trail for client projects
# ============================================================================
[branch]
    # Preserve merge history for client audit trails
    # Shows complete development timeline and decision points
    # Important for: Client transparency, project archaeology, billing disputes
    autoSetupMerge = always